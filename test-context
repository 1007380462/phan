#!/home/amorrison/sandbox/php-7.0.0RC5/package/bin/php
<?php declare(strict_types=1);

// Grab these before we define our own classes
$internal_class_name_list = get_declared_classes();
$internal_interface_name_list = get_declared_interfaces();
$internal_trait_name_list = get_declared_traits();
$internal_function_name_list = get_defined_functions()['internal'];

// Make sure we have the ast.so module loaded
if (!extension_loaded('ast')) {
	echo <<<NO_AST_ERROR
Please install php-ast
NO_AST_ERROR;
exit;
}

require_once(__DIR__.'/Phan/Bootstrap.php');

use \Phan\CodeBase;
use \Phan\Language\FQSEN;
use \Phan\Language\Context;
use \Phan\Debug;

$code_base = new CodeBase(
    $internal_class_name_list,
    $internal_interface_name_list,
    $internal_trait_name_list,
    $internal_function_name_list
);

$context = new Context($code_base);

$context_namespace =
    $context->withNamespace('\A');

$context_class =
    $context_namespace->withClassFQSEN(
        new FQSEN([], '\A', 'B')
    );

$context_method =
    $context_namespace->withMethodFQSEN(
        new FQSEN([], '\A', 'B', 'c')
    );

print_r((string)$context_method);
